<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Adiosy&#39;s blog</title>
    <link>http://www.adiosy.com/</link>
    <description>Recent content on Adiosy&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Thu, 18 Jul 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://www.adiosy.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Learn_Vulkan04_渲染框架实现_材质系统设计</title>
      <link>http://www.adiosy.com/posts/learn_vulkan/learn_vulkan04_%E6%B8%B2%E6%9F%93%E6%A1%86%E6%9E%B6%E5%AE%9E%E7%8E%B0_%E6%9D%90%E8%B4%A8%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1.html</link>
      <pubDate>Thu, 18 Jul 2024 00:00:00 +0000</pubDate>
      <guid>http://www.adiosy.com/posts/learn_vulkan/learn_vulkan04_%E6%B8%B2%E6%9F%93%E6%A1%86%E6%9E%B6%E5%AE%9E%E7%8E%B0_%E6%9D%90%E8%B4%A8%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1.html</guid>
      <description>&lt;p&gt;网格（Mesh）用作定义虚拟物体的形状，材质（Material）则是描述这些物体表面的外观，需要借助纹理和材质参数，参数包括光照参数、UV偏移、基础颜色等等。在渲染系统渲染某个网格体时，将对应材质参数传递给着色器，即可完成不同表面的渲染。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Android跨进程渲染-HardwareBuffer</title>
      <link>http://www.adiosy.com/posts/android%E8%B7%A8%E8%BF%9B%E7%A8%8B%E6%B8%B2%E6%9F%93-hardwarebuffer.html</link>
      <pubDate>Tue, 16 Apr 2024 18:34:07 +0800</pubDate>
      <guid>http://www.adiosy.com/posts/android%E8%B7%A8%E8%BF%9B%E7%A8%8B%E6%B8%B2%E6%9F%93-hardwarebuffer.html</guid>
      <description>&lt;p&gt;图片流交换是非常常见的需求，为了保证程序的健壮性，可以将这些步骤分为各个进程分别处理，防止中间步骤错误导致主进程crash从而降低用户体验。比如人脸识别、场景识别、直播等场景，这些图片数据可能要经过很多个步骤流转，在各步骤中执行格式转换、图层叠加、图片畸变、颜色矫正等，比如直播中常见的特效和相机图片叠加。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Learn_Vulkan03_渲染框架实现_窗口和Vulkan环境</title>
      <link>http://www.adiosy.com/posts/learn_vulkan/learn_vulkan03_%E6%B8%B2%E6%9F%93%E6%A1%86%E6%9E%B6%E5%AE%9E%E7%8E%B0_%E7%AA%97%E5%8F%A3%E5%92%8Cvulkan%E7%8E%AF%E5%A2%83.html</link>
      <pubDate>Thu, 11 Apr 2024 00:00:00 +0000</pubDate>
      <guid>http://www.adiosy.com/posts/learn_vulkan/learn_vulkan03_%E6%B8%B2%E6%9F%93%E6%A1%86%E6%9E%B6%E5%AE%9E%E7%8E%B0_%E7%AA%97%E5%8F%A3%E5%92%8Cvulkan%E7%8E%AF%E5%A2%83.html</guid>
      <description>&lt;p&gt;在上一篇文章讨论了工程的基本结构，接下来要把Vulkan、日志系统和窗口系统植入到本框架。&lt;/p&gt;</description>
    </item>
    <item>
      <title>OpenGL或Vulkan渲染YUV格式数据</title>
      <link>http://www.adiosy.com/posts/opengl%E6%88%96vulkan%E6%B8%B2%E6%9F%93yuv%E6%A0%BC%E5%BC%8F%E6%95%B0%E6%8D%AE.html</link>
      <pubDate>Wed, 10 Apr 2024 15:43:59 +0800</pubDate>
      <guid>http://www.adiosy.com/posts/opengl%E6%88%96vulkan%E6%B8%B2%E6%9F%93yuv%E6%A0%BC%E5%BC%8F%E6%95%B0%E6%8D%AE.html</guid>
      <description>&lt;p&gt;YUV是一种广泛应用于视频和图像处理的颜色空间格式，它通过将亮度和色度分离来表示颜色信息，以提高压缩效率和适应人眼感知。为了深入了解YUV格式及其应用，本文将分为几个部分来讨论。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Learn_Vulkan02_渲染框架实现_开篇</title>
      <link>http://www.adiosy.com/posts/learn_vulkan/learn_vulkan02_%E6%B8%B2%E6%9F%93%E6%A1%86%E6%9E%B6%E5%AE%9E%E7%8E%B0_%E5%BC%80%E7%AF%87.html</link>
      <pubDate>Sun, 07 Apr 2024 00:00:00 +0000</pubDate>
      <guid>http://www.adiosy.com/posts/learn_vulkan/learn_vulkan02_%E6%B8%B2%E6%9F%93%E6%A1%86%E6%9E%B6%E5%AE%9E%E7%8E%B0_%E5%BC%80%E7%AF%87.html</guid>
      <description>&lt;p&gt;距离上一次认真写一点东西，又过了1年之久，深感自己拖延症愈加严重，每次定好的计划总是无法做到真正的执行，这期间也可以给自己找个借口，那就是工作很忙，但也有大部分原因是因为感觉自己经验尚浅，想着要后面会不会推翻当下的方案，后面就是不知道从哪开始记录了，最后就进入了焦虑 -&amp;gt; 躺平 -&amp;gt; 焦虑的恶性循环。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Learn_Vulkan01_重要对象浅析</title>
      <link>http://www.adiosy.com/posts/learn_vulkan/learn_vulkan01_%E9%87%8D%E8%A6%81%E5%AF%B9%E8%B1%A1%E6%B5%85%E6%9E%90.html</link>
      <pubDate>Thu, 15 Jun 2023 00:00:00 +0000</pubDate>
      <guid>http://www.adiosy.com/posts/learn_vulkan/learn_vulkan01_%E9%87%8D%E8%A6%81%E5%AF%B9%E8%B1%A1%E6%B5%85%E6%9E%90.html</guid>
      <description>&lt;p&gt;前面一篇文章是&lt;a href=&#34;http://www.adiosy.com/posts/learn_vulkan/Learn_Vulkan00_%E7%AC%AC%E4%B8%80%E4%B8%AA%E4%B8%89%E8%A7%92%E5%BD%A2.html&#34;&gt;Learn_Vulkan00_第一个三角形&lt;/a&gt;，渲染出来了第一个彩色三角形。学习新事物的是一个很枯燥的过程，所以我们应该每个阶段想办法获得一些成就感，比如上一篇的三角形，先用最快的方式得到效果，能看到效果就能给我们带来进一步的学习动力。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Learn_Vulkan00_第一个三角形</title>
      <link>http://www.adiosy.com/posts/learn_vulkan/learn_vulkan00_%E7%AC%AC%E4%B8%80%E4%B8%AA%E4%B8%89%E8%A7%92%E5%BD%A2.html</link>
      <pubDate>Tue, 13 Jun 2023 00:00:00 +0000</pubDate>
      <guid>http://www.adiosy.com/posts/learn_vulkan/learn_vulkan00_%E7%AC%AC%E4%B8%80%E4%B8%AA%E4%B8%89%E8%A7%92%E5%BD%A2.html</guid>
      <description>&lt;p&gt;本文将描述一个基于C++/Vulkan渲染彩色三角形的案例。因为Vulkan API较为底层，对象也繁多，所以我尽可能只保留必要内容，目的是梳理出来一个Vulkan程序的基础框架，也是对Vulkan各个对象的初步理解。当然也出于这个关系，本文不会对每个API参数都进行详细解释。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Hello OpenXR - 第一个OpenXR程序</title>
      <link>http://www.adiosy.com/posts/hello-openxr---%E7%AC%AC%E4%B8%80%E4%B8%AAopenxr%E7%A8%8B%E5%BA%8F.html</link>
      <pubDate>Tue, 07 Mar 2023 14:34:07 +0800</pubDate>
      <guid>http://www.adiosy.com/posts/hello-openxr---%E7%AC%AC%E4%B8%80%E4%B8%AAopenxr%E7%A8%8B%E5%BA%8F.html</guid>
      <description>&lt;p&gt;本文目标是实现一个最小化OpenXR应用程序，只渲染一个三角形，渲染库采用的是OpenGL，窗口管理使用&lt;a href=&#34;https://link.zhihu.com/?target=https%3A//www.glfw.org/&#34;&gt;GLFW&lt;/a&gt;，OpenXR Runtime使用的是&lt;a href=&#34;https://link.zhihu.com/?target=https%3A//monado.dev/&#34;&gt;Monado&lt;/a&gt;。因为Monado目前支持的是安卓和Linux平台，本人测试使用的是&lt;strong&gt;Ubuntu系统&lt;/strong&gt;，所以这个DEMO可以在Ubuntu系统下正常运行，但别的系统还没有经过严格测试。&lt;/p&gt;</description>
    </item>
    <item>
      <title>OpenGL渲染器04_绘制点线面</title>
      <link>http://www.adiosy.com/posts/opengl_renderer/04_%E7%BB%98%E5%88%B6%E7%82%B9%E7%BA%BF%E9%9D%A2.html</link>
      <pubDate>Mon, 29 Nov 2021 14:34:07 +0800</pubDate>
      <guid>http://www.adiosy.com/posts/opengl_renderer/04_%E7%BB%98%E5%88%B6%E7%82%B9%E7%BA%BF%E9%9D%A2.html</guid>
      <description>&lt;p&gt;上一篇《OpenGL环境搭建》给接下来的内容创造了基础，我们拥有了glfw提供的窗口，也有了ImGui提供的GUI，接下来就&lt;em&gt;磨刀霍霍向猪羊&lt;/em&gt;，准备大干一场。&#xA;不过，最开始，我们还只能绘制简单的东西：点、线、三角形和四边形。&lt;/p&gt;</description>
    </item>
    <item>
      <title>OpenGL渲染器03_OpenGL环境 </title>
      <link>http://www.adiosy.com/posts/opengl_renderer/03_opengl%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.html</link>
      <pubDate>Tue, 23 Nov 2021 14:34:07 +0800</pubDate>
      <guid>http://www.adiosy.com/posts/opengl_renderer/03_opengl%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.html</guid>
      <description>&lt;p&gt;本文目标：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;使用glfw、glad和ImGui完成OpenGL环境的搭建；&lt;/li&gt;&#xA;&lt;li&gt;创建第一个glfw窗口；&lt;/li&gt;&#xA;&lt;li&gt;使用ImGui，显示ImGui的demo窗口。&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>OpenGL渲染器02_C&#43;&#43;环境</title>
      <link>http://www.adiosy.com/posts/opengl_renderer/02_c&#43;&#43;%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.html</link>
      <pubDate>Fri, 19 Nov 2021 14:34:07 +0800</pubDate>
      <guid>http://www.adiosy.com/posts/opengl_renderer/02_c&#43;&#43;%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.html</guid>
      <description>&lt;p&gt;本文目标：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;使用CMake+MinGW搭建C++编译环境。&lt;/li&gt;&#xA;&lt;li&gt;使用CLion搭建C++开发环境，实现C++程序开发、生成、编译、运行；&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>OpenGL渲染器01_开篇</title>
      <link>http://www.adiosy.com/posts/opengl_renderer/01_%E5%BC%80%E7%AF%87.html</link>
      <pubDate>Thu, 18 Nov 2021 14:34:07 +0800</pubDate>
      <guid>http://www.adiosy.com/posts/opengl_renderer/01_%E5%BC%80%E7%AF%87.html</guid>
      <description>&lt;p&gt;在真正开始之前，我想先说说我的情况，目前我从事软件开发，不过工作上主要语言还是Java。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;编程基础，四年Java编程基础；工作上没用到C++，不过自己业余学习和使用C++大概1.5年左右，差不多是用到了才查，断断续续，没有系统性学习。&lt;/li&gt;&#xA;&lt;li&gt;图形学线性代数基础，目前才了解向量、矩阵的基本运算和变换基础，更高级的还没学。&lt;/li&gt;&#xA;&lt;li&gt;OpenGL编程的一些基础知识，基础几何绘制、MVP变换、材质、光照等基础。&lt;/li&gt;&#xA;&lt;li&gt;还有一点WebGL的经验，实现了基础材质和光照。&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>多层菜单数据查询</title>
      <link>http://www.adiosy.com/posts/%E5%A4%9A%E5%B1%82%E8%8F%9C%E5%8D%95%E6%95%B0%E6%8D%AE%E6%9F%A5%E8%AF%A2.html</link>
      <pubDate>Fri, 06 Jul 2018 14:34:07 +0800</pubDate>
      <guid>http://www.adiosy.com/posts/%E5%A4%9A%E5%B1%82%E8%8F%9C%E5%8D%95%E6%95%B0%E6%8D%AE%E6%9F%A5%E8%AF%A2.html</guid>
      <description>&lt;p&gt;在9月份面试时，面试官在一张草稿纸上出了一道&lt;strong&gt;省市县联动&lt;/strong&gt;的题目，并提示我可以使用&lt;strong&gt;递归或循环&lt;/strong&gt;，将数据查询出来封装到对象中。当时我用了循环的方式将其封装，虽说勉强实现，但是代码冗余度高，逻辑性特别差。碰巧最近项目中业务需要，也是将多级菜单封装到根菜单返回给前端，发现还是会把自己弄得头晕，因此打算认真写一下，当做笔记，也对之前Hibernate,Mybatis框架的复习。&lt;/p&gt;</description>
    </item>
    <item>
      <title>基于Apache james实现的Java邮件服务器</title>
      <link>http://www.adiosy.com/posts/%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8.html</link>
      <pubDate>Tue, 02 Jan 2018 14:34:07 +0800</pubDate>
      <guid>http://www.adiosy.com/posts/%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8.html</guid>
      <description>&lt;p&gt;邮件服务器是一种用来负责电子邮件收发管理的设备，而邮件服务就是责邮件的收信和发信功能，其最主要有&lt;code&gt;pop和smtp&lt;/code&gt;两个协议。关于这两个协议，有着很多的知识点涵盖其中，这里不过多介绍。下面是我接触过的两个可以实现邮件服务的解决方案。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Linux下安装Nginx</title>
      <link>http://www.adiosy.com/posts/linux%E4%B8%8B%E5%AE%89%E8%A3%85nginx.html</link>
      <pubDate>Mon, 18 Dec 2017 14:34:07 +0800</pubDate>
      <guid>http://www.adiosy.com/posts/linux%E4%B8%8B%E5%AE%89%E8%A3%85nginx.html</guid>
      <description>&lt;p&gt;Nginx(&amp;ldquo;engine x&amp;rdquo;)是一款是由俄罗斯的程序设计师Igor Sysoev所开发高性能的 Web和 反向代理 服务器，也是一个 IMAP/POP3/SMTP 代理服务器。在高连接并发的情况下，Nginx是Apache服务器不错的替代品。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Liunx下的JDK和MySQL安装</title>
      <link>http://www.adiosy.com/posts/liunx%E4%B8%8B%E7%9A%84jdk%E5%92%8Cmysql%E5%AE%89%E8%A3%85.html</link>
      <pubDate>Sat, 16 Dec 2017 14:34:07 +0800</pubDate>
      <guid>http://www.adiosy.com/posts/liunx%E4%B8%8B%E7%9A%84jdk%E5%92%8Cmysql%E5%AE%89%E8%A3%85.html</guid>
      <description>&lt;p&gt;本文是在Linux下安装JDK和MySQL的过程记录。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Springboot和JPA搭建demo</title>
      <link>http://www.adiosy.com/posts/springboot%E5%92%8Cjpa%E6%90%AD%E5%BB%BAdemo.html</link>
      <pubDate>Sat, 25 Nov 2017 14:34:07 +0800</pubDate>
      <guid>http://www.adiosy.com/posts/springboot%E5%92%8Cjpa%E6%90%AD%E5%BB%BAdemo.html</guid>
      <description>&lt;p&gt;在项目的技术选型中，持久层框架常用的有Hibernate/JPA/Mybatis和原生JDBC等等，虽然之前特别喜欢JPA的简洁强大，但是在一些项目上还是必须得使用Mybatis这个小巧，面向SQL的持久层框架，结合Springboot，将之前的技术融合到新技术中，所以写了这个测试demo，该测试只单独写了持久层，不包含web和业务层代码，即整合了springboot和mybatis后，再加一个单元测试。&lt;/p&gt;</description>
    </item>
    <item>
      <title>关于</title>
      <link>http://www.adiosy.com/about.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://www.adiosy.com/about.html</guid>
      <description>我是谁 我是xingchen，我的这个主页叫做“Adiosy”，热爱编程和天文，喜欢电影《星际穿越》和纪录片《宇宙时空之旅》(Cosmos: A Spacetime Odyssey)。&#xA;希望能和您交个朋友，下边是我的联系方式，如果感兴趣的话，可以在这里留言，也可以在小破站关注一波哦～～&#xA;我的经历 2008年， 老师在课堂上跟我们讲什么是计算机，第一次接触计算机。 2011年， 有了自己的第一个手机，通过每个月5块30M的流量，学会了上网冲浪。 2013年，开启三年打螺丝生涯。 2015年3月，拥有第一台个人电脑，接触到三维建模（3dMax）和计算机图形学。 2015下半年～2016年底，学习Java和安卓开发。 2017年，开启深漂，10月份进入第一家互联网公司，从事Java开发工作。 2019年，业余接触到UE4和Unity，自己尝试使用UE4写了几个demo，并发现因为基础不牢，很多渲染、动画相关内容没看懂。 2020～2022，中途辗转了三个公司。因本职属于Java，只能业余学习线性代数、OpenGL/Vulkan渲染，尝试过使用OpenGL写一个小型渲染器。 2023年3月至今，终于把三维图形渲染开发变为自己的主业。 目标 我从2017～2022主业都是Java开发，业余尝试学习三维渲染和游戏引擎。在2015年接触到程序开发之后，一直对三维渲染和开发有非常大的兴趣，特别是一些渲染效果、动画效果、粒子和AI行为树等等。但奈何当时编程基础不够，所以最后选择Java开发，心里想着是Java开发有很多机会，至少我能进入这个行业。所以在2017～2022年间，业余我都在学习三维渲染方面内容。</description>
    </item>
    <item>
      <title>归档</title>
      <link>http://www.adiosy.com/archives.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://www.adiosy.com/archives.html</guid>
      <description></description>
    </item>
    <item>
      <title>搜索</title>
      <link>http://www.adiosy.com/search.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://www.adiosy.com/search.html</guid>
      <description></description>
    </item>
    <item>
      <title>读书</title>
      <link>http://www.adiosy.com/books.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://www.adiosy.com/books.html</guid>
      <description>要到书林中徜徉。中外古今的文明成果，我们都应有分析、有鉴别、有批判地加以继承和发扬。—刘心武&#xA;纪录片《宇宙时空之旅》(Cosmos: A Spacetime Odyssey) 在那里，那是家园，那是我们。在那里，你爱的每个人，你认识的每个人，你听说过的每个人，在这世上存在过的每个人，度过了自己的一生。&#xA;蓝点 聚集在这里的，是我们的欢乐和痛苦，是成千上万的宗教信仰、意识形态，和经济学说。每个猎手与觅食者，每个英雄与懦夫，每个文明的创立者和毁灭者，每个国王与农夫，每对年轻的爱侣，每一个母亲与父亲、充满希望的孩子们，发明家与探险家，每一位高尚的教师、每一位贪腐的政客，每一位超级明星、每一位最高领袖，人类史上的每一位圣人和罪人，都生活在这里， 如一粒微尘，悬浮在一束阳光之中。地球是一个很小的舞台，在浩瀚的宇宙背景下，想想过去的血流成河，那为帝王将相而流的血，只为让他们在光荣和胜利中，成为瞬间的伟人，占有那一个小点中…那一小部分。想想那无尽的残酷，图像里那一个像素点的某个角落的民众，每天把这残酷施加到与他们没什么区别的另一个角落的民众身上。他们为何常常误解，他们为何渴望杀死对方，他们的憎恨为何如此狂热。&#xA;我们在装模做样，我们自以为很重要，妄想着我们人类地位特殊，在宇宙中与众不同，这一切，都因这泛着苍白蓝光的小点而动摇。我们的星球，不过是一粒孤独的微尘，笼罩在伟大的宇宙黑暗之中。</description>
    </item>
  </channel>
</rss>
