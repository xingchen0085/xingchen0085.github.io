<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Adiosy&#39;s blog</title>
    <link>http://www.adiosy.com/</link>
    <description>Recent content on Adiosy&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Thu, 18 Jul 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://www.adiosy.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Learn_Vulkan04_渲染框架实现_材质系统设计</title>
      <link>http://www.adiosy.com/posts/learn_vulkan/learn_vulkan04_%E6%B8%B2%E6%9F%93%E6%A1%86%E6%9E%B6%E5%AE%9E%E7%8E%B0_%E6%9D%90%E8%B4%A8%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1.html</link>
      <pubDate>Thu, 18 Jul 2024 00:00:00 +0000</pubDate>
      <guid>http://www.adiosy.com/posts/learn_vulkan/learn_vulkan04_%E6%B8%B2%E6%9F%93%E6%A1%86%E6%9E%B6%E5%AE%9E%E7%8E%B0_%E6%9D%90%E8%B4%A8%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1.html</guid>
      <description>前言 工程源码：https://gitee.com/xingchen0085/adiosy_engine&#xA;视频：XINGCHEN0085的个人空间-哔哩哔哩&#xA;网格（Mesh）用作定义虚拟物体的形状，材质（Material）则是描述这些物体表面的外观，需要借助纹理和材质参数，参数包括光照参数、UV偏移、基础颜色等等。在渲染系统渲染某个网格体时，将对应材质参数传递给着色器，即可完成不同表面的渲染。如下图，这些网格体利用了不同的材质参数完成渲染。&#xA;说明：本文出现的代码，只是为了标明主要流程和设计，大部分只是伪代码，具体实现可查看工程源码。&#xA;渲染循环 以下是该渲染器的主循环伪代码：</description>
    </item>
    <item>
      <title>Android跨进程渲染-HardwareBuffer</title>
      <link>http://www.adiosy.com/posts/android%E8%B7%A8%E8%BF%9B%E7%A8%8B%E6%B8%B2%E6%9F%93-hardwarebuffer.html</link>
      <pubDate>Tue, 16 Apr 2024 18:34:07 +0800</pubDate>
      <guid>http://www.adiosy.com/posts/android%E8%B7%A8%E8%BF%9B%E7%A8%8B%E6%B8%B2%E6%9F%93-hardwarebuffer.html</guid>
      <description>前言 图片流交换是非常常见的需求，为了保证程序的健壮性，可以将这些步骤分为各个进程分别处理，防止中间步骤错误导致主进程crash从而降低用户体验。比如人脸识别、场景识别、直播等场景，这些图片数据可能要经过很多个步骤流转，在各步骤中执行格式转换、图层叠加、图片畸变、颜色矫正等，比如直播中常见的特效和相机图片叠加。&#xA;在查阅资料过程中，发现网上相应的资料较少。对我非常有帮助的是一位博主Robot 9写的《基于 HardwareBuffer 实现 Android 多进程渲染》，但我不太想使用aidl来实现跨进程，于是我研究一段时间之后，决定使用Socket+HardwareBuffer来完成跨进程渲染。</description>
    </item>
    <item>
      <title>Learn_Vulkan03_渲染框架实现_窗口和Vulkan环境</title>
      <link>http://www.adiosy.com/posts/learn_vulkan/learn_vulkan03_%E6%B8%B2%E6%9F%93%E6%A1%86%E6%9E%B6%E5%AE%9E%E7%8E%B0_%E7%AA%97%E5%8F%A3%E5%92%8Cvulkan%E7%8E%AF%E5%A2%83.html</link>
      <pubDate>Thu, 11 Apr 2024 00:00:00 +0000</pubDate>
      <guid>http://www.adiosy.com/posts/learn_vulkan/learn_vulkan03_%E6%B8%B2%E6%9F%93%E6%A1%86%E6%9E%B6%E5%AE%9E%E7%8E%B0_%E7%AA%97%E5%8F%A3%E5%92%8Cvulkan%E7%8E%AF%E5%A2%83.html</guid>
      <description>前言 在上一篇文章讨论了工程的基本结构，接下来要把Vulkan、日志系统和窗口系统植入到本框架。&#xA;以下是准备使用的版本约定：&#xA;第三方库 版本号 描述 spdlog 1.</description>
    </item>
    <item>
      <title>Hello OpenXR - Monado跨进程渲染流程概述</title>
      <link>http://www.adiosy.com/posts/hello-openxr---monado%E8%B7%A8%E8%BF%9B%E7%A8%8B%E6%B8%B2%E6%9F%93%E6%B5%81%E7%A8%8B%E6%A6%82%E8%BF%B0.html</link>
      <pubDate>Wed, 10 Apr 2024 17:59:07 +0800</pubDate>
      <guid>http://www.adiosy.com/posts/hello-openxr---monado%E8%B7%A8%E8%BF%9B%E7%A8%8B%E6%B8%B2%E6%9F%93%E6%B5%81%E7%A8%8B%E6%A6%82%E8%BF%B0.html</guid>
      <description>1 Monado Monado是GNU/Linux的第一个OpenXR™ Runtime，旨在启动开源XR生态系统的开发，并为设备供应商提供以GNU/Linux平台为目标的基本模块。&#xA;Monado is the first OpenXR™ runtime for GNU/Linux.</description>
    </item>
    <item>
      <title>OpenGL或Vulkan渲染YUV格式数据</title>
      <link>http://www.adiosy.com/posts/opengl%E6%88%96vulkan%E6%B8%B2%E6%9F%93yuv%E6%A0%BC%E5%BC%8F%E6%95%B0%E6%8D%AE.html</link>
      <pubDate>Wed, 10 Apr 2024 15:43:59 +0800</pubDate>
      <guid>http://www.adiosy.com/posts/opengl%E6%88%96vulkan%E6%B8%B2%E6%9F%93yuv%E6%A0%BC%E5%BC%8F%E6%95%B0%E6%8D%AE.html</guid>
      <description>1 概述 YUV是一种广泛应用于视频和图像处理的颜色空间格式，它通过将亮度和色度分离来表示颜色信息，以提高压缩效率和适应人眼感知。为了深入了解YUV格式及其应用，本文将分为几个部分来讨论。首先，我们将探讨YUV格式的采样方式和存储格式，以及不同采样方式对图像质量和压缩效率的影响。其次，我们将研究RGB到YUV和YUV到RGB的转换方法，包括转换公式和矩阵运算，以便在不同颜色空间之间进行准确的转换。最后会介绍如何利用OpenGL或Vulkan 来处理和渲染YUV格式的图像或视频数据，将讨论使用着色器程序和纹理贴图技术来实现YUV数据的采样、转换和渲染的方法。&#xA;2 YUV介绍 YUV，“Y” 表示明亮度（Luminance），也就是像素的灰阶值，还含有较多的绿色通道量。因此需要单纯的 Y 分量就可以显示出完整的黑白图像。“U” 和 “V” 分别表示色度（Chrominance）和浓度（Chroma），用于描述色彩饱和度，U 分量是蓝色通道与 Y（亮度）的差值，V 分量是红色通道与 Y（亮度）的差值。</description>
    </item>
    <item>
      <title>Learn_Vulkan02_渲染框架实现_开篇</title>
      <link>http://www.adiosy.com/posts/learn_vulkan/learn_vulkan02_%E6%B8%B2%E6%9F%93%E6%A1%86%E6%9E%B6%E5%AE%9E%E7%8E%B0_%E5%BC%80%E7%AF%87.html</link>
      <pubDate>Sun, 07 Apr 2024 00:00:00 +0000</pubDate>
      <guid>http://www.adiosy.com/posts/learn_vulkan/learn_vulkan02_%E6%B8%B2%E6%9F%93%E6%A1%86%E6%9E%B6%E5%AE%9E%E7%8E%B0_%E5%BC%80%E7%AF%87.html</guid>
      <description>前言 距离上一次认真写一点东西，又过了1年之久，深感自己拖延症愈加严重，每次定好的计划总是无法做到真正的执行，这期间也可以给自己找个借口，那就是工作很忙，但也有大部分原因是因为感觉自己经验尚浅，想着要后面会不会推翻当下的方案，后面就是不知道从哪开始记录了，最后就进入了焦虑 -&amp;gt; 躺平 -&amp;gt; 焦虑的恶性循环。</description>
    </item>
    <item>
      <title>Learn_Vulkan01_重要对象浅析</title>
      <link>http://www.adiosy.com/posts/learn_vulkan/learn_vulkan01_%E9%87%8D%E8%A6%81%E5%AF%B9%E8%B1%A1%E6%B5%85%E6%9E%90.html</link>
      <pubDate>Thu, 15 Jun 2023 00:00:00 +0000</pubDate>
      <guid>http://www.adiosy.com/posts/learn_vulkan/learn_vulkan01_%E9%87%8D%E8%A6%81%E5%AF%B9%E8%B1%A1%E6%B5%85%E6%9E%90.html</guid>
      <description>1 概述 前面一篇文章是Learn_Vulkan00_第一个三角形，渲染出来了第一个彩色三角形。学习新事物的是一个很枯燥的过程，所以我们应该每个阶段想办法获得一些成就感，比如上一篇的三角形，先用最快的方式得到效果，能看到效果就能给我们带来进一步的学习动力。&#xA;上一个案例中用到的对象我只是列了一个列表，简单描述了各个对象的作用。但描述还是较为简短，在进入更复杂的Vulkan程序之前，还是想把几个重要对象梳理一遍。&#xA;层和扩展 实例 窗口表面 物理设备和队列族 逻辑设备和队列 交换链 说明：本文中的代码就是上篇文章中的代码，编程环境是Windows，如果要在Linux/MacOS中运行，还需要修改配置文件。</description>
    </item>
    <item>
      <title>Learn_Vulkan00_第一个三角形</title>
      <link>http://www.adiosy.com/posts/learn_vulkan/learn_vulkan00_%E7%AC%AC%E4%B8%80%E4%B8%AA%E4%B8%89%E8%A7%92%E5%BD%A2.html</link>
      <pubDate>Tue, 13 Jun 2023 00:00:00 +0000</pubDate>
      <guid>http://www.adiosy.com/posts/learn_vulkan/learn_vulkan00_%E7%AC%AC%E4%B8%80%E4%B8%AA%E4%B8%89%E8%A7%92%E5%BD%A2.html</guid>
      <description>1 概述 本文将描述一个基于C++/Vulkan渲染彩色三角形的案例。因为Vulkan API较为底层，对象也繁多，所以我尽可能只保留必要内容，目的是梳理出来一个Vulkan程序的基础框架，也是对Vulkan各个对象的初步理解。当然也出于这个关系，本文不会对每个API参数都进行详细解释。&#xA;1.1 Vulkan的概念 Vulkan是一套渲染图形API，于2015由Khronos组织发布，另外OpenGL也是这个组织发布的图形API。</description>
    </item>
    <item>
      <title>Hello OpenXR - 第一个OpenXR程序</title>
      <link>http://www.adiosy.com/posts/hello-openxr---%E7%AC%AC%E4%B8%80%E4%B8%AAopenxr%E7%A8%8B%E5%BA%8F.html</link>
      <pubDate>Tue, 07 Mar 2023 14:34:07 +0800</pubDate>
      <guid>http://www.adiosy.com/posts/hello-openxr---%E7%AC%AC%E4%B8%80%E4%B8%AAopenxr%E7%A8%8B%E5%BA%8F.html</guid>
      <description>1 概要 本文目标是实现一个最小化OpenXR应用程序，只渲染一个三角形，渲染库采用的是OpenGL，窗口管理使用GLFW，OpenXR Runtime使用的是Monado。因为Monado目前支持的是安卓和Linux平台，本人测试使用的是Ubuntu系统，所以这个DEMO可以在Ubuntu系统下正常运行，但别的系统还没有经过严格测试。&#xA;2 环境准备 点击下载cmake，如果使用apt安装，可能版本号过低。</description>
    </item>
    <item>
      <title>OpenGL渲染器04_绘制点线面</title>
      <link>http://www.adiosy.com/posts/opengl_renderer/04_%E7%BB%98%E5%88%B6%E7%82%B9%E7%BA%BF%E9%9D%A2.html</link>
      <pubDate>Mon, 29 Nov 2021 14:34:07 +0800</pubDate>
      <guid>http://www.adiosy.com/posts/opengl_renderer/04_%E7%BB%98%E5%88%B6%E7%82%B9%E7%BA%BF%E9%9D%A2.html</guid>
      <description>回顾 上一篇《OpenGL环境搭建》给接下来的内容创造了基础，我们拥有了glfw提供的窗口，也有了ImGui提供的GUI，接下来就磨刀霍霍向猪羊，准备大干一场。&#xA;不过，最开始，我们还只能绘制简单的东西：点、线、三角形和四边形。&#xA;目标 各种华丽的二维、三维图形，虚拟现实，都是由点线面基本图元构成的。如果接触过Maya、Blender等建模工具，会发现，模型的基础就是点线面，建模就是构建点线面，然后挤出立体，从而形成三维。&#xA;然而最简单的面就是拥有三个顶点的面：三角形。所以目标就是：</description>
    </item>
    <item>
      <title>OpenGL渲染器03_OpenGL环境 </title>
      <link>http://www.adiosy.com/posts/opengl_renderer/03_opengl%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.html</link>
      <pubDate>Tue, 23 Nov 2021 14:34:07 +0800</pubDate>
      <guid>http://www.adiosy.com/posts/opengl_renderer/03_opengl%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.html</guid>
      <description>目标 原本计划是OpenGL环境就放在上一节（C++环境搭建）中一起记录的，后面发现内容太多了，所以就分开记录。&#xA;使用glfw、glad和ImGui完成OpenGL环境的搭建； 创建第一个glfw窗口； 使用ImGui，显示ImGui的demo窗口。 计算机图形学 计算机图形学是使用数学算法将二维或三维图形转化计算机显示的栅格形式的科学，计算机图形学的主要研究内容就是研究如何在计算机中表示图形、以及利用计算机进行图形的计算、处理和显示的相关原理和算法。</description>
    </item>
    <item>
      <title>OpenGL渲染器02_C&#43;&#43;环境</title>
      <link>http://www.adiosy.com/posts/opengl_renderer/02_c&#43;&#43;%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.html</link>
      <pubDate>Fri, 19 Nov 2021 14:34:07 +0800</pubDate>
      <guid>http://www.adiosy.com/posts/opengl_renderer/02_c&#43;&#43;%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.html</guid>
      <description>目标 使用CMake+MinGW搭建C++编译环境。 使用CLion搭建C++开发环境，实现C++程序开发、生成、编译、运行； 构建和编译 C++源码“转译”为机器语言，就是编译过程。最常用的编译器是GNU的C/C++编译器。也就是gcc/g++。&#xA;如果我们要编译和运行C++程序，下载安装g++后：</description>
    </item>
    <item>
      <title>OpenGL渲染器01_开篇</title>
      <link>http://www.adiosy.com/posts/opengl_renderer/01_%E5%BC%80%E7%AF%87.html</link>
      <pubDate>Thu, 18 Nov 2021 14:34:07 +0800</pubDate>
      <guid>http://www.adiosy.com/posts/opengl_renderer/01_%E5%BC%80%E7%AF%87.html</guid>
      <description>概述 在真正开始之前，我想先说说我的情况，目前我从事软件开发，不过工作上主要语言还是Java。&#xA;编程基础，四年Java编程基础；工作上没用到C++，不过自己业余学习和使用C++大概1.5年左右，差不多是用到了才查，断断续续，没有系统性学习。 图形学线性代数基础，目前才了解向量、矩阵的基本运算和变换基础，更高级的还没学。 OpenGL编程的一些基础知识，基础几何绘制、MVP变换、材质、光照等基础。 还有一点WebGL的经验，实现了基础材质和光照。 为什么要写关于图形学的内容呢，缘由悠长。这一段可能会有些啰嗦，可以直接略过。</description>
    </item>
    <item>
      <title>多层菜单数据查询</title>
      <link>http://www.adiosy.com/posts/%E5%A4%9A%E5%B1%82%E8%8F%9C%E5%8D%95%E6%95%B0%E6%8D%AE%E6%9F%A5%E8%AF%A2.html</link>
      <pubDate>Fri, 06 Jul 2018 14:34:07 +0800</pubDate>
      <guid>http://www.adiosy.com/posts/%E5%A4%9A%E5%B1%82%E8%8F%9C%E5%8D%95%E6%95%B0%E6%8D%AE%E6%9F%A5%E8%AF%A2.html</guid>
      <description>在9月份面试时，面试官在一张草稿纸上出了一道省市县联动的题目，并提示我可以使用递归或循环，将数据查询出来封装到对象中。当时我用了循环的方式将其封装，虽说勉强实现，但是代码冗余度高，逻辑性特别差。&#xA;碰巧最近项目中业务需要，也是将多级菜单封装到根菜单返回给前端，发现还是会把自己弄得头晕，因此打算认真写一下，当做笔记，也对之前Hibernate,Mybatis框架的复习。下面将会使用Mybatis 和 JPA 分别实现菜单封装业务逻辑，初步规划只要将数据以JSON格式写回前端即是测试通过。&#xA;使用Mybatis 数据库表一览</description>
    </item>
    <item>
      <title>基于Apache james实现的Java邮件服务器</title>
      <link>http://www.adiosy.com/posts/%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8.html</link>
      <pubDate>Tue, 02 Jan 2018 14:34:07 +0800</pubDate>
      <guid>http://www.adiosy.com/posts/%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8.html</guid>
      <description>什么是邮件服务器 邮件服务器是一种用来负责电子邮件收发管理的设备，而邮件服务就是责邮件的收信和发信功能，其最主要有pop和smtp两个协议。关于这两个协议，有着很多的知识点涵盖其中，这里不过多介绍。下面是我接触过的两个可以实现邮件服务的解决方案。&#xA;易邮邮件服务 在windows系统下，可以使用 易邮邮件服务 ，这个服务器简单而且实用，用在平时开发，测试或者局域网间的邮件收发还是挺方便的，不过我没有找到官方的，可以将易邮邮件服务安装在Linux的相关资料，因此不使用这个。这是易邮邮件服务的官方网站地址: https://www.</description>
    </item>
    <item>
      <title>Linux下安装Nginx</title>
      <link>http://www.adiosy.com/posts/linux%E4%B8%8B%E5%AE%89%E8%A3%85nginx.html</link>
      <pubDate>Mon, 18 Dec 2017 14:34:07 +0800</pubDate>
      <guid>http://www.adiosy.com/posts/linux%E4%B8%8B%E5%AE%89%E8%A3%85nginx.html</guid>
      <description>介绍 Nginx(&amp;ldquo;engine x&amp;rdquo;)是一款是由俄罗斯的程序设计师Igor Sysoev所开发高性能的 Web和 反向代理 服务器，也是一个 IMAP/POP3/SMTP 代理服务器。在高连接并发的情况下，Nginx是Apache服务器不错的替代品。</description>
    </item>
    <item>
      <title>Liunx下的JDK和MySQL安装</title>
      <link>http://www.adiosy.com/posts/liunx%E4%B8%8B%E7%9A%84jdk%E5%92%8Cmysql%E5%AE%89%E8%A3%85.html</link>
      <pubDate>Sat, 16 Dec 2017 14:34:07 +0800</pubDate>
      <guid>http://www.adiosy.com/posts/liunx%E4%B8%8B%E7%9A%84jdk%E5%92%8Cmysql%E5%AE%89%E8%A3%85.html</guid>
      <description>准备工作 本次环境配置中，安装的主要环境有：JDK , MySQL&#xA;我的服务器环境版本：&#xA;Linx ： CentOS 6.</description>
    </item>
    <item>
      <title>Springboot和JPA搭建demo</title>
      <link>http://www.adiosy.com/posts/springboot%E5%92%8Cjpa%E6%90%AD%E5%BB%BAdemo.html</link>
      <pubDate>Sat, 25 Nov 2017 14:34:07 +0800</pubDate>
      <guid>http://www.adiosy.com/posts/springboot%E5%92%8Cjpa%E6%90%AD%E5%BB%BAdemo.html</guid>
      <description>在项目的技术选型中，持久层框架常用的有Hibernate/JPA/Mybatis和原生JDBC等等，虽然之前特别喜欢JPA的简洁强大，但是在一些项目上还是必须得使用Mybatis这个小巧，面向SQL的持久层框架，结合Springboot，将之前的技术融合到新技术中，所以写了这个测试demo，该测试只单独写了持久层，不包含web和业务层代码，即整合了springboot和mybatis后，再加一个单元测试。&#xA;测试一 「完全注解形式」 1.pom.xml 配置文件中引入 mybatis-spring-boot-starter ，支持mybatis相关</description>
    </item>
    <item>
      <title>关于</title>
      <link>http://www.adiosy.com/about.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://www.adiosy.com/about.html</guid>
      <description>我是谁 我是xingchen，我的这个主页叫做“Adiosy”，热爱编程和天文，喜欢电影《星际穿越》和纪录片《宇宙时空之旅》(Cosmos: A Spacetime Odyssey)。&#xA;希望能和您交个朋友，下边是我的联系方式，如果感兴趣的话，可以在这里留言，也可以在小破站关注一波哦～～</description>
    </item>
    <item>
      <title>归档</title>
      <link>http://www.adiosy.com/archives.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://www.adiosy.com/archives.html</guid>
      <description></description>
    </item>
    <item>
      <title>搜索</title>
      <link>http://www.adiosy.com/search.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://www.adiosy.com/search.html</guid>
      <description></description>
    </item>
    <item>
      <title>读书</title>
      <link>http://www.adiosy.com/books.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://www.adiosy.com/books.html</guid>
      <description>要到书林中徜徉。中外古今的文明成果，我们都应有分析、有鉴别、有批判地加以继承和发扬。—刘心武&#xA;纪录片《宇宙时空之旅》(Cosmos: A Spacetime Odyssey) 在那里，那是家园，那是我们。在那里，你爱的每个人，你认识的每个人，你听说过的每个人，在这世上存在过的每个人，度过了自己的一生。</description>
    </item>
  </channel>
</rss>
